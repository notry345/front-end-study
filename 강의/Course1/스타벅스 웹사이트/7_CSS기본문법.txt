> CSS 기본 문법

HTML로 잡은 구조를 보기 좋게 꾸며주는 역할
즉, 스타일을 작업하는 것
선택자로 특정한 HTML 요소들을 선택하여 {} 사이에 들어있는 CSS 내용을 적용시킴

선택자 { 속성: 값; }
선택자 { 속성: 값; 속성: 값; }

선택자(selector) : 스타일(CSS)을 적용할 대상
속성(property) : 스타일(CSS)의 종류
값(value) : 스타일(CSS)의 값
{ } : 스타일 범위의 시작과 끝
여러가지 속성과 값의 세트들을 하나 이상 넣을 수 있음

/* 주석 작성 */
선택자 {
  속성: 값;
}
들여쓰기(indent)와 내어쓰기(outdent)를 적용하여 알아보기 쉽게

div { color: red; margin: 20px; }
div라는 태그 선택자를 통하여
HTML에서 div라는 태그를 찾아서 색상과 외부여백에 주어진 값을 적용시킴


> CSS 선언 방식

1. 내장 방식

<style></style>의 콘텐츠로 스타일(CSS 문법)을 작성하는 방식
HTML 문서 내부의 head 영역에 작성
별도의 CSS 파일을 만들지 않아도 된다는 장점이 있으나
CSS 내용을 HTML 파일 안에 담아서 관리한다는 것은 유지 보수 측면에서 단점이 많음
권장 X

<style>
  div {
    color: red;
    margin: 20px;
  }
</style>

2. 링크 방식

<link />로 외부 CSS 문서를 가져와서 연결하는 방식
"병렬 방식" (import방식과 다름)

- HTML 파일에는 다음과 같이 작성
<link rel="stylesheet" href="./css/main.css">

- main.css에는 다음과 같이 작성
div {
  color: red;
  margin: 20px;
}

3. 인라인 방식

전역 속성 중 하나인 요소의 style 속성에 직접 스타일을 작성하는 방식
해당 요소를 직접적으로 찾아서 속성을 추가하는 것이기 때문에 선택자가 없음
너무 지나치게 우선시되기 때문에 수정이 어려울 수 있음

<div style="color: red; margin: 20px;"></div>

4. @import 방식

CSS의 @import 규칙으로 CSS 문서 안에서 또 다른 CSS 문서를 가져와 연결하는 방식
HTML에서 CSS를 가져와 연결하는 것이 링크방식,
이 상태에서 CSS 문서(main.css) 안에서 또 다른 CSS 문서(box.css)를 가져와 연결하는 것이 @import 방식
"직렬 방식"
- 직렬 방식의 장점이자 단점은 main.css가 HTML에 연결되어 실제 코드가 해석되기 전까지는
  import라는 코드 또한 해석되기 전이기 때문에 box.css는 HTML에 연결이 되지 못하고 적용될 수 없다는 것임
- 이러한 특성을 이용하여 일부러 연결을 지연시키려는 의도로 사용할 수 있으나
  연결이 실제로 지연된다는 단점이 존재함
import 규칙이란?


- HTML 파일에는 다음과 같이 작성
<link rel="stylesheet" href="./css/main.css">

- main.css에는 다음과 같이 작성
@import url("./box.css");
div {
  color: red;
  margin: 20px;
}

- box.css에는 다음과 같이 작성
.box {
  background-color: red;
  padding: 20px;
}
