HTML의 속성 = attribute
CSS의 속성 = properties


> CSS를 통해 제어할 수 있는 HTML의 부분들

박스 모델
- HTML 요소의 기본적인 모양을 만들어내는 여러가지 속성
- 가로 너비, 세로 너비, 내부 여백, 외부 여백
- 즉, HTML 요소라는 하나의 박스를 제어해 주는 속성들

글꼴(폰트), 문자
- 글꼴의 크기나 두께

배경
- 요소의 사각형 범위에 배경으로 색상이나 이미지를 삽입할 수 있음

배치
- 특정한 요소를 웹페이지의 원하는 위치에다가 가져다 놓는 것

플렉스(정렬)
- HTML 요소들은 기본적으로 위에서부터 아래로 수직으로 쌓임
- 수평으로 구성되어져 있는 레이아웃 또한 필요하기 때문에
  flex라는 개념을 사용 여러 요소들을 순서대로 수평 정렬하기도
- (기존에는 '띄움'이라는 개념을 이용했었음)

전환
- 요소의 전 상태와 후 상태의 중간 과정을 자연스럽게 하기 위해 간단한 애니메이션을 추가
- 즉, 요소의 전후 상태를 애니메이션 처리하는 개념

변환
- 요소를 회전시키거나 이동시키거나 크기를 조절하는 등 요소에 변화를 주는 CSS의 속성들
- 2D 변환과 3D 변환이 있음

띄움
- 요소를 공중으로 띄운다는 개념
- 띄워진 요소 주변으로 문자가 흐를 수 있는 구조가 됨
- 마치 신문기사의 사진 근처의 글자들
- (flex라는 개념이 나오기 전에는 요소를 수평 정렬시킬 수 있는 기술이 딱히 없었기 때문에
  요소를 수평 정렬시킬 때 사용했었음)

애니메이션
- (전환으로는 전 상태와 후 상태 말고는 추가적인 애니메이션 부여할 수 X)
- 훨씬 더 복잡한 구조의 애니메이션을 만들 때 사용

그리드
- 엑셀 등과 같이 행과 열의 구조를 갖고 있는 2차원의 레이아웃을 만들기 위해서 제공되는 기술
- 레이아웃 구조들을 손쉽게 제어할 수 있게 해줌

다단
- 하나의 페이지에서 단을 여러 개로 나누는 것
- 주로 신문에서처럼 글자들이 많은 콘텐츠에서 사용

필터
- 요소를 블러 처리하거나 흑백 효과(grayscale)를 줄 수 있음
- 이미지의 색상을 반전시키는 기능도 있음


> 박스 모델에 해당하는 CSS의 속성들

1) width, height : 요소의 가로/세로 너비
- auto : 기본값(요소에 이미 들어있는 속성의 값), 브라우저가 요소의 특성(블록 요소인지 인라인 요소인지)을 고려하여 너비를 계산
- 단위 : 정확한 크기를 명시하고 싶을시 그 값을 px(픽셀), em, vs 등 단위로 지정

인라인 요소는 가로 너비가 최대한 줄어들려고 하는 반면,
블록 요소는 가로 너비가 최대한 늘어나려고 함

본질적으로 아무것도 나타내지 않는, 콘텐츠 영역을 설정하는 용도로 쓰이는
대표적인 인라인 요소인 <span></span>의 경우,
- 기본값인 auto를 값으로 가질 때,
  포함한 콘텐츠의 크기만큼 가로 너비와 세로 너비가 자동으로 줄어듬
rv) 인라인 요소는 본질적으로 레이아웃을 작업하는 용도가 아니라 글자를 제어하려는 목적으로 만들어졌기 때문에
    가로 사이즈와 세로 사이즈를 명시해도 화면에 구현 X

본질적으로 아무것도 나타내지 않는, 콘텐츠 영역을 설정하는 용도로 쓰이는
대표적인 블록 요소인 <div></div>의 경우,
- 기본값인 auto를 값으로 가질 때,
  가로 너비는 부모 요소의 크기만큼 자동으로 최대한 늘어나려고 하지만
  세로 너비는 포함한 콘텐츠의 크기만큼 자동으로 줄어듬

2)  max-width, max-height : 요소가 커질 수 있는 최대 가로/세로 너비
- none(기본값) : 최대 너비 제한 없음
- 단위 : px, em, vw 등 단위로 지정

3) min-width, min-height : 요소가 작아질 수 있는 최소 가로/세로 너비
- 0(기본값) : 최소 너비 제한 없음, 참고로 0에는 따로 단위를 붙일 필요가 없음
- 단위 : px, em, vw 등 단위로 지정


> CSS 단위 (표현 단위)

px : 픽셀
- 하나의 디바이스가 표현할 수 있는 화면의 픽셀(점)을 의미
- 절대 단위라고 인식하는데 디바이스나 환경에 따라 픽셀이라는 기준이 조금씩 달라질 수 있긴 함
- 주로 1920 x 1080 모니터 많이 사용
  이는 가로에는 1920개의 픽셀이, 세로에는 1080개의 픽셀이 있다는 의미

% : 상대적 백분율
- 상대단위
- 어떤 것을 기준으로 해서 몇 퍼센트의 크기를 가지는지 기본적으로 백분율로 (1%부터 100%까지) 나타냄

em : 요소(자신)의 글꼴 크기
- 하나의 요소가 기본적으로 가지고 있는 기본적인 글꼴 크기가 1em
- 상대적임

rem : 루트 요소(html)의 글꼴 크기
- 루트(root) 요소란 최상위 요소를 의미
- HTML 구조에서 최상위 요소는 html 요소임
- rem 사용시 무조건 html 요소에 지정되어져 있는 글꼴 크기만을 기준으로 함
- 요소 자신이 가지고 있는 폰트의 크기를 기준으로 하는 em과는 다르게
  루트 요소인 html 요소에 들어있는 폰트 크기를 기준으로 하여 단위를 사용하기 때문에
  주변상황이 바뀌더라도 조금 더 (고정적이고) 단위가 수정되는 일이 없도록 만들어 주는 것이 장점이자 단점

vw : 뷰포트 가로 너비의 백분율
- viewport란 브라우저 화면에 출력되는 페이지 전체의 영역
- 1vw의 경우, 뷰포트의 가로 너비를 100만큼 쪼개서 1만큼의 크기를 가지는 것
  즉 뷰포트의 가로 너비의 1/100만큼의 크기를 의미

vh : 뷰포트 세로 너비의 백분율
- 1vh의 경우, 뷰포트의 세로 너비를 100만큼 쪼개서 1만큼의 크기를 가지는 것
  즉 뷰포트의 세로 너비의 1/100만큼의 크기를 의미

cf)
- 글자를 제어해주는 대부분의 CSS 속성은 상속된다
- 기본적으로 브라우저는 따로 폰트의 크기가 명시되어 있지 않으면, 16px만큼의 크기를 가짐


> 외부 여백 (margin)

요소 바깥쪽에 공간을 만들어서 그 주변의 요소들을 밀어내는 개념

margin : 요소의 외부 여백(공간)을 지정하는 단축 속성, 음수 사용할 수 있음!(여백이 안쪽으로 줄어듬)
- 0(기본값) : 외부 여백 없음
- auto : 브라우저가 여백을 계산, 가로(세로) 너비가 있는 요소의 가운데 정렬에 주로 활용
- 단위 : px, em, vw 등 단위로 지정
- % : 부모 요소의 가로 너비에 대한 비율로 지정 (세로 너비 아님 주의)

margin-방향 : 요소의 외부 여백을 지정하는 기타 개별 속성
각각의 방향으로 여백을 추가할 수 있음
margin-top
margin-right
margin-bottom
margin-left

margin이라는 속성에는 값을 지정할 수가 있고, 기본값은 0
그리고 margin은 단축 속성
margin에 각각의 방향을 한 번에 제어하는 마치 단축키와 같은 단축 속성

값을 1개 작성하면
- 값이 위, 아래, 좌, 우에 모두 지정됨
margin: 0;
top,right,bottom,left

값을 2개 작성하면
- 첫번째 값은 위, 아래에
  두번째 값은 좌, 우에
margin: 10px 20px;
top,bottom/left,right

값을 3개 작성하면
- 첫번째 값은 위에
  두번째 값은 좌, 우에
  세번째 값은 아래에
margin: 10px 20px 30px;
top/left,right/bottom

값을 4개 작성하면 위부터 시계방향으로 값 적용
- 첫번째 값은 위
  두번째 값은 우
  세번째 값은 아래
  네번째 값은 좌
margin: 10px 20px 30px 40px;
top/right/bottom/left

브라우저 개발자도구에서 원하는 요소를 선택한 후 Computed 탭에서
요소가 가지고 있는 기본적인 크기, 내부 여백, 테두리선, 외부 여백에 대한 내용을 확인 할 수 있음


> 내부 여백 (padding)

padding : 요소의 내부 여백(공간)을 지정하는 단축 속성, 요소 자체의 크기가 커짐
- 0(기본값) : 내부 여백 없음
- 단위 : px, em, vw 등 단위로 지정
- % : 부모 요소의 가로 너비에 대한 비율로 지정

값이 1개
padding: 0; -> top,right,bottom,left

값이 2개
padding: 10px 20px; -> top,bottom/left,right

값이 3개
padding 10px 20px 30px; -> top/left,right/bottom

값이 4개
padding 10px 20px 30px 40px; -> top/right/bottom/left

단축 속성임
개별 속성도 있음
padding-방향 : 요소의 내부 여백을 지정하는 기타 개별 속성들
padding-top
padding-right
padding-bottom
padding-left


> 테두리선(border)과 색상 표현

border: 선의두께(border-width) 선의종류(border-style) 선의색상(border-color);
중요) 요소의 크기가 커짐
선의 색상은 기본적으로 검정색

각각의 기본값
border: medium none black

border-width : 요소 테두리 선의 두께
- medium(기본값) : 중간 두께
- thin : 얇은 두께
- thick : 굵은 두께
- 단위 : px, em, % 등의 단위로 지정  <- 권장
- 단축 속성임
  border-width: top,right,bottom,left;
  border-width: top,bottom left,right;
  border-width: top left,right bottom;
  border-width: top right bottom left;
- 당연하게도 개별 속성 또한 있음

border-style : 요소 테두리 선의 종류
- none(기본값) : 선없음
- solid : 실선
- dashed : 파선
- dotted : 점선
- double : 두 줄 선
- groove : 홈이 파여있는 모양
- ridge : 솟은 모양 (groove의 반대)
- inset : 요소 전체가 들어간 모양
- outset : 요소 전체가 나간 모양
- 각각의 방향을 개별적으로 통제 가능
  border-style: top,right,bottom,left;
  border-style: top,bottom left,right;
  border-style: top left,right bottom;
  border-style: top right bottom left;

border-color : 요소 테두리 선의 색상을 지정하는 단축 속성
- black(기본값)
- 색상 : 선의 색상
- transparent : 투명
- 각각의 방향을 개별적으로 통제 가능
  border-color: top,right,bottom,left;
  border-color: top,bottom left,right;
  border-color: top left,right bottom;
  border-color: top right bottom left;

<요소의 테두리 선을 지정하는 개별 속성들>

방향을 입력해서 조금 더 세밀한 제어 가능
border-방향
border-방향-속성

border-top: 두께 종류 색상;
border-top-width: 두께;
border-top-style: 종류;
border-top-color: 색상;


<색상 표현>

색상 이름 : 브라우저에서 제공하는 색상 이름 <- 권장 X
  red, tomato, royalblue
Hex 생상코드 : 16진수 색상(hexadecimal colors) <- 실제 제품 제작시 권장
  #000, #FFFFFF
RGB : 빛의 삼원색
  rgb(255, 255, 255)
RGBA : 빛의 삼원색 + 투명도(0~1 사이의 소수)
  rgba(0, 0, 0, 0.5)
HSL : 색상, 채도, 명도
  hsl(120, 100%, 50%)
HSLA : 색상, 채도, 명도 + 투명도
  hsl(120, 100%, 50%, 0.3)


> 모서리를 둥글게 border-radius

border-radius : 요소의 모서리를 둥글게 깎음
- 0(기본값) : 둥글게 없음
- 단위 : px, em, vw 등의 단위로 지정

border-radius: 10px;
요소의 각 모석리에 반지름이 10px인 원을 배치

값이 1개 - 모든 모서리에 하나의 값 적용
border-radius: 10px;

값이 4개 - 왼쪽상단부터 시계방향으로 각각의 값 적용
border-radius: 0 10px 0 0;


> 크기 계산 box-sizing

box-sizing : 요소의 크기를 계산하는 기준을 지정
- content-box(기본값) : 요소의 내용(content)만을 기준으로 크기 계산
- border-box : 요소의 내용 + padding + border로 크기 계산

요소의 크기가 커지는 특성을 가지고 있는 border나 padding 속성을 사용하게 되면, 그 내용이 들어간만큼 요소의 크기가 실제로 커진다.
이 때, box-sizing: border-box;를 이용하여 본인이 명시한 요소의 가로 세로 사이즐를 유지할 수 있음


> 넘침 제어 overflow

overflow : 요소의 크기 이상으로 내용이 넘쳤을 때, 보여짐을 제어하는 단축 속성
- visible(기본값) : 넘친 값을 그대로 보여줌
- hidden : 넘친 내용을 잘라냄
- scroll : 넘친 내용이 없어도 x축(수평)과 y축(수직)에 스크롤바 생성 <- 많이 사용 X
- auto : 넘친 내용이 있는 경우에만 (브라우저가 자동으로 판단하여) 잘라내고 스크롤바 생성

overflow-x, overflow-y : 요소의 크기 이상으로 내용이 넘쳤을 때, 보여짐을 제어하는 개별 속성들


> 출력 특성 display

display : 요소의 화면 출력 특성 지정
기본값 3개
- block : 상자(레이아웃) 요소
- inline : 글자요소
- inline-block : 글자 + 상자 요소의 특성 (가로 세로 값 지정)
따로 지정해서 사용하는 값 3개
- flex : (수평정렬에 용이한) 플렉스 박스 (1차원 레이아웃)
- grid : 그리드 (2차원 레이아웃)
- none : 보여짐 특성 없음, 화면에서 사라짐
기타 : table, table-row, table-cell 등...